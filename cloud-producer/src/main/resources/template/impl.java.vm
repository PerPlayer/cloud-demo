package ${packagePath}.service.impl;

import ${packagePath}.dao.${entityName}Dao;
import ${packagePath}.entity.${entityName}Entity;
import ${packagePath}.model.${entityName}Model;
import ${packagePath}.service.${entityName}Service;
import com.google.common.collect.Lists;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Service
public class ${entityName}Impl implements ${entityName}Service {

    private final Logger logger = LoggerFactory.getLogger(getClass());

    @Autowired
    private ${entityName}Dao dao;

    @Override
    public ${entityName}Model save(${entityName}Model model) {
        ${entityName}Entity entity = new ${entityName}Entity();
        model.setId(UUID.randomUUID().toString().replaceAll("-", ""));
        BeanUtils.copyProperties(model, entity);
        int count = dao.save(entity);
        if (count < 1) {
            throw new RuntimeException("保存失败");
        }
        return model;
    }

    @Override
    public int update(String id, String column, Object value) {
        return dao.update(id, column, value);
    }

    @Override
    public int delete(String id) {
        return dao.delete(id);
    }

    @Override
    public List<${entityName}Model> queryAll() {
        List<${entityName}Entity> entities = dao.queryAll();
        ArrayList<${entityName}Model> models = Lists.newArrayList();
        entities.forEach(entity -> {
            models.add(toModel(entity));
        });
        return models;
    }

    @Override
    public ${entityName}Model queryById(String id) {
        return toModel(dao.queryById(id));
    }

    private ${entityName}Model toModel(${entityName}Entity entity) {
            ${entityName}Model model = new ${entityName}Model();
        BeanUtils.copyProperties(entity, model);
        return model;
    }
}
